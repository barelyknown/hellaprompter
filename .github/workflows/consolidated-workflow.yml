name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  deployments: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      twitter_token: ${{ steps.post-to-x.outputs.TWITTER_REFRESH_TOKEN }}
      token_updated: ${{ steps.post-to-x.outputs.token_updated || steps.check-token.outputs.token_updated }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
          lfs: true # Include Git LFS files
      
      - name: Setup Node.js 🔧
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies 📦
        run: npm ci
        
      - name: Format Completions 📝
        run: npm run format-completions
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Generate Illustrations 🖼️
        run: npm run generate-illustrations
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          IDEOGRAM_API_KEY: ${{ secrets.IDEOGRAM_API_KEY }}
          
      - name: Commit formatted completions and illustrations if any changes 💾
        id: commit-changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are any changes to commit
          if [[ -n $(git status --porcelain prompts) ]]; then
            # Add all changed files in prompts directory
            git add prompts/*/completion.md || true
            git add prompts/*/*.png || true
            git add prompts/*/metadata.json || true
            git commit -m "Auto-format completions and generate illustrations" || true
            git push
            echo "changes_committed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit"
            echo "changes_committed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Fetch latest changes after commit 🔄
        run: git pull
        
      - name: Build site 🏗️
        run: |
          npm run build
      
      - name: Check if token file directory exists
        run: |
          mkdir -p twitter_tokens

      - name: Check if token was updated
        id: check-token
        run: |
          if [ -f "twitter_tokens/new_refresh_token.txt" ]; then
            echo "token_updated=true" >> $GITHUB_OUTPUT
          else
            echo "token_updated=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Deploy to GitHub Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          
      # We've moved the GitHub Pages deployment verification directly into the post-to-x.js script
      # which directly checks if the specific URL is accessible before posting to Twitter

      - name: Post to X (after deployment) 🐦
        id: post-to-x
        env:
          TWITTER_CLIENT_ID: ${{ secrets.TWITTER_CLIENT_ID }}
          TWITTER_CLIENT_SECRET: ${{ secrets.TWITTER_CLIENT_SECRET }}
          TWITTER_REFRESH_TOKEN: ${{ secrets.TWITTER_REFRESH_TOKEN }}
          MAX_RETRIES: "10"  # Retry up to 10 times
          RETRY_DELAY: "30"  # 30 seconds between retries
        run: |
          # Run a script to post all eligible prompts to X with retries
          echo "Posting eligible prompts to X after site deployment..."
          
          # Try posting to X with retries
          RETRY_COUNT=0
          MAX_RETRIES=${MAX_RETRIES:-10}  # Default to 10 retries if not set
          RETRY_DELAY=${RETRY_DELAY:-30}  # Default to 30s if not set
          
          # Calculate total max wait time in minutes for human-readable output
          TOTAL_MAX_MINUTES=$(( (MAX_RETRIES * RETRY_DELAY) / 60 ))
          if [ $TOTAL_MAX_MINUTES -eq 0 ]; then
            TOTAL_MAX_SECONDS=$(( MAX_RETRIES * RETRY_DELAY ))
            echo "Will retry up to $MAX_RETRIES times with ${RETRY_DELAY}s between attempts (up to $TOTAL_MAX_SECONDS seconds total)"
          else
            echo "Will retry up to $MAX_RETRIES times with ${RETRY_DELAY}s between attempts (up to $TOTAL_MAX_MINUTES minutes total)"
          fi
          
          until npm run post-all-to-x || [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
            RETRY_COUNT=$((RETRY_COUNT + 1))
            echo "Posting to X failed. Retry $RETRY_COUNT of $MAX_RETRIES in ${RETRY_DELAY}s..."
            sleep $RETRY_DELAY
          done
          
          if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
            echo "WARNING: Maximum retries reached. Some posts may not have completed successfully."
          fi
          
          # If a new token was generated, read it and set as output
          if [ -f "twitter_tokens/new_refresh_token.txt" ]; then
            # Set the refresh token output
            echo "TWITTER_REFRESH_TOKEN=$(cat twitter_tokens/new_refresh_token.txt)" >> $GITHUB_OUTPUT
            # Set token_updated to true to trigger the update-token job
            echo "token_updated=true" >> $GITHUB_OUTPUT
            echo "Token updated and outputs set for update-token job"
          fi
      
      - name: Commit xPostUrl updates to metadata.json 💾
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # First pull any changes that might have been made
          git pull origin main
          
          # Check for changes in metadata.json files specifically
          if [[ -n $(git status --porcelain prompts/*/metadata.json) ]]; then
            # Add all changed metadata files
            git add prompts/*/metadata.json
            git commit -m "Update xPostUrl in metadata.json after posting to X" || true
            # Push with upstream set explicitly
            git push -u origin main
            echo "Committed and pushed xPostUrl updates"
          else
            echo "No metadata changes to commit"
          fi

  update-token:
    needs: build
    if: needs.build.outputs.token_updated == 'true'
    uses: ./.github/workflows/store-twitter-token.yml
    with:
      token: ${{ needs.build.outputs.twitter_token }}
    secrets:
      GH_PAT: ${{ secrets.GH_PAT }}